name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Install dependencies (NuGet packages)
      run: dotnet restore

    - name: Build release version
      run: dotnet build --configuration Release --no-restore

    - name: Configure ProKnow
      run: |
        mkdir ./proknow-sdk-test/TestEnvironment/etc
        sed -e "s|S3_ACCESS_KEY_ID|${{ secrets.S3_ACCESS_KEY_ID }}|g" \
            -e "s|S3_ACCESS_KEY_SECRET|${{ secrets.S3_ACCESS_KEY_SECRET }}|g" \
            -e "s|S3_ACCESS_KEY_ID|${{ secrets.AUTH0_CLIENT_ID }}|g" \
            -e "s|S3_ACCESS_KEY_SECRET|${{ secrets.AUTH0_CLIENT_SECRET }}|g" \
            ./proknow-sdk-test/TestEnvironment/templates/config.json > \
            ./proknow-sdk-test/TestEnvironment/etc/config.json

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to ProKnow ACR
      uses: azure/docker-login@v1
      with:
        login-server: proknow.azurecr.io
        username: ${{ secrets.AZURE_ACR_USERNAME }}
        password: ${{ secrets.AZURE_ACR_PASSWORD }}

    - name: Start dependency containers
      run: |
        docker-compose -f ./proknow-sdk-test/TestEnvironment/docker-compose.yml up -d
        sleep 10

    - name: Configure test environment
      shell: pwsh
      run: |
        Start-Sleep -Seconds 10
        ./proknow-sdk-test/TestEnvironment/test-env-setup.ps1
        $runSettings = @"
        <?xml version="1.0" encoding="utf-8"?>
        <RunSettings>
          <!-- Parameters used by tests at run time -->
          <TestRunParameters>
            <Parameter name="baseUrl" value="http://localhost:3005" />
            <Parameter name="credentialsFile" value="./credentials.json" />
          </TestRunParameters>
        </RunSettings>
        "@
        $runSettings | Out-File -FilePath "./.runsettings"

    - name: Run tests
      run: dotnet test

    - name: Build documentation site (see https://github.com/nikeee/docfx-action)
      uses: nikeee/docfx-action@v1.0.0
      with:
        args: docs/docfx.json
        
    - name: Upload documentation site artifact
      uses: actions/upload-artifact@v2
      with:
        name: docfx-artifact
        path: docs/_site

    - name: Pack NuGet packages
      run: dotnet pack --configuration Release -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg
      
    - name: Upload NuGet package artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nuget-artifacts
        path: "**/*.*nupkg"

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository
      uses: actions/checkout@v4
    
    - name: Download documentation site artifact
      uses: actions/download-artifact@v2
      with:
        name: docfx-artifact
        path: docs/_site

    - name: Publish documentation site to GitHub Pages (see https://github.com/marketplace/actions/deploy-to-github-pages)
      uses: JamesIves/github-pages-deploy-action@v4.3.4
      with:
        folder: docs/_site
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Download NuGet package artifacts
      uses: actions/download-artifact@v2
      with:
        name: nuget-artifacts
        path: "**/*.*nupkg"

    - name: Push packages to NuGet
      run: dotnet nuget push **/*.nupkg
            --api-key ${{ secrets.NUGET_DEPLOY_KEY }}
            --source https://api.nuget.org/v3/index.json
